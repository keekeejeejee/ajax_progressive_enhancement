<h1>Sign Up</h1>
{{#if error}}
	<p class="error">
		{{ error }}
	</p>
{{/if}}
<!-- just a static form for visitors without JS -->
<form id="signupForm" method="post" action="/signup" enctype="multipart/form-data">
	<label for="username">
		<span class="required">*</span>
		Username: 
		<input type="text" id="username" name="username" value="{{ username }}"><span id="usernameWarning" class="warning"></span>
	</label><br>
	<label for="password1">
		<span class="required">*</span>
		Password:
		<input type="password" id="password1" name="password1">
	</label><br>
	<label for="password2">
		<span class="required">*</span>
		Repeat Password:
		<input type="password" id="password2" name="password2"><span id="passwordWarning" class="warning"></span>
	</label><br>
	<label for="firstName">First Name:
		<input type="text" id="firstName" name="firstName" value="{{ firstName }}">
	</label><br>
	<label for="lastName">Last Name:
		<input type="text" id="lastName" name="lastName" value="{{ lastName }}">
	</label><br>
	<label for="email">
		<span class="required">*</span>
		Email:
		<input type="text" id="email" name="email" value="{{ email }}"><span id="emailWarning" class="warning"></span>
	</label><br>
	<label for="image" id="imageUploadContainer">
		Profile Image:
		<input type="file" accept="image/*" id="image" name="image"><br>
	</label><br>
	<input type="submit" value="Sign Up">
</form>

<p class="note">
	* = required field
</p>

<script>
// nothing in this script is necessary for the visitor to be able to sign up
// everything it does just makes the experience faster and easier

var usernameField,
	usernameWarning,
	emailField,
	emailWarning,
	password1Field,
	password2Field,
	passwordWarning,
	signupForm,
	imageUploadContainer,
	imageInput,
	imageUploaded = false;


window.addEventListener('load', function() {
	// check that the username is unique with each keystroke in the username field
	usernameField = document.getElementById('username');
	usernameWarning = document.getElementById('usernameWarning');
	usernameField.addEventListener('keyup', checkUsername);

	// check that the email is unique with each keystroke in the email field
	emailField = document.getElementById('email');
	emailWarning = document.getElementById('emailWarning');
	emailField.addEventListener('keyup', checkEmail);

	// check that passwords match
	password1Field = document.getElementById('password1');
	password2Field = document.getElementById('password2');
	passwordWarning = document.getElementById('passwordWarning');
	password2Field.addEventListener('keyup', checkPasswords);
	password1Field.addEventListener('keyup', checkPasswords);

	// set up the form to upload the image by ajax if the browser supports FormData
	if (typeof FormData !== 'undefined') {
		signupForm = document.getElementById('signupForm');
		imageUploadContainer = document.getElementById('imageUploadContainer');
		imageInput = document.getElementById('image');

		signupForm.insertBefore(imageUploadContainer, usernameField.parentNode);

		imageInput.addEventListener('change', function() {
			var file = this.files[0];
			if (!file) return;
			uploadFile('/upload-image', file, function(response) {
				response = JSON.parse(response);
				if (response.received) {
					// once the image is uploaded successfully, you could possibly display
					// it back to the visitor for review, or something else to show 
					// immediate feedback
					console.log('image upload succeeded');
					imageUploaded = true;
				} else {
					// even though the upload failed, the image is still in the form's
					// file upload, so it'll go to the server when the form is submitted
					console.log('image upload failed');
					imageUploaded = false;
				}
			});
		});

		// remove the file upload from the form before submitting if we've already uploaded
		// the image
		signupForm.addEventListener('submit', function(e) {
			if (imageUploaded) {
				e.preventDefault();
				this.removeChild(imageUploadContainer);
				this.removeEventListener('submit');
				this.submit();
			}
		});
	}
});

function checkUsername() {
	var data = {
		username: this.value.trim()
	}
	post('/check-username', JSON.stringify(data), function(response) {
		response = JSON.parse(response);
		if (response.taken) {
			usernameWarning.innerHTML = 'That username is taken';
		} else {
			usernameWarning.innerHTML = '';
		}
	});
}

function checkEmail() {
	var data = {
		email: this.value.trim()
	}
	post('/check-email', JSON.stringify(data), function(response) {
		response = JSON.parse(response);
		if (response.taken) {
			emailWarning.innerHTML = 'That email is taken';
		} else {
			emailWarning.innerHTML = '';
		}
	});
}

function checkPasswords() {
	if (password1Field.value !== password2Field.value) {
		passwordWarning.innerHTML = 'Passwords do not match.';
	} else {
		passwordWarning.innerHTML = '';
	}
}

// standard POST ajax function
function post(url, data, callback) {
	var xhr = new XMLHttpRequest();
	xhr.open('POST', url);
	xhr.onreadystatechange = function() {
		if (xhr.readyState === 4) {
			if (xhr.status < 400) {
				return callback(xhr.responseText);
			} else {
				return callback(JSON.stringify({error: true}));
			}
		}
	}
	xhr.setRequestHeader('Content-Type', 'application/json');
	xhr.send(data);
}

// file upload function
function uploadFile(url, file, callback) {
		var formData = new FormData();
		formData.append('image', file);
		var request = new XMLHttpRequest();
		request.open('POST', url);;
		request.onreadystatechange = function() {
			if (request.readyState === 4) {
				if (request.status === 200) {
					if (callback) callback(request.responseText);
				} else {
					if (callback) callback(JSON.stringify({error: true}));
				}
			}
		}
		request.send(formData);
	}
</script>